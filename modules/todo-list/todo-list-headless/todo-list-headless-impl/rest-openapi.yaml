components:
  schemas:
    TodoItemModel:
      description: Contains all of the data for a single todoItem.
      properties:
        title:
          description: The todoItem title.
          type: string
        todoItemId:
          description: The todoItem internal ID.
          type: string
        description:
          description: The description of the todoItem.
          type: string
        group:
          description: The group the todoItem belongs to.
          type: string
        articleId:
          description: A journal articleId if there is a web content article for this todoItem.
          type: string
        doneFlag:
          description: Todo Item finished flag.
          type: boolean
        progress:
          description: Percentage of the progress.
          type: number
        dueDate:
          description: Todo Item finished diedline date.
          format: date-time
          type: string
        memo:
          description: Todo Item addtional memo.
          type: string
        creator:
          $ref: "#/components/schemas/Creator"
      type: object
    Creator:
      description: Represents the user account of the content's creator/author. Properties follow the [creator](https://schema.org/creator) specification.
      properties:
        additionalName:
          description: The author's additional name (e.g., middle name).
          readOnly: true
          type: string
        familyName:
          description: The author's surname.
          readOnly: true
          type: string
        givenName:
          description: The author's first name.
          readOnly: true
          type: string
        id:
          description: The author's ID.
          format: int64
          readOnly: true
          type: integer
        image:
          description: A relative URL to the author's profile image.
          format: uri
          readOnly: true
          type: string
        name:
          description: The author's full name.
          readOnly: true
          type: string
        profileURL:
          description: A relative URL to the author's user profile.
          format: uri
          readOnly: true
          type: string
        creator:
          $ref: "#/components/schemas/Creator"
      type: object
info:
    description:
        "TodoListHeadless REST API. A Java client JAR is available for use with the group ID 'com.liferay', artifact ID
        'com.liferay.todolist.client', and version '1.0.0'."
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "TodoListHeadless"
    version: v1.0
openapi: 3.0.1
paths:
  "/todoItems":
    get:
      operationId: getTodoItemModelsPage
      tags: ["TodoItemModel"]
      description: Retrieves the list of todoItems. Results can be paginated, filtered, searched, and sorted.
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: sort
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TodoItemModel"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/TodoItemModel"
                type: array
    post:
      operationId: postTodoItemModel
      tags: ["TodoItemModel"]
      description: Create a new todoItem/mineral.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoItemModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/TodoItemModel"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItemModel"
            application/xml:
              schema:
                $ref: "#/components/schemas/TodoItemModel"
  "/todoItems/{todoItemId}":
    get:
      operationId: getTodoItemModel
      tags: ["TodoItemModel"]
      description: Retrieves the todoItem via its ID.
      parameters:
        - name: todoItemId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItemModel"
            application/xml:
              schema:
                $ref: "#/components/schemas/TodoItemModel"
    patch:
      operationId: patchTodoItemModel
      tags: ["TodoItemModel"]
      description: Replaces the todoItem with the information sent in the request body. Any missing fields are deleted, unless they are required.
      parameters:
        - name: todoItemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoItemModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/TodoItemModel"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItemModel"
            application/xml:
              schema:
                $ref: "#/components/schemas/TodoItemModel"
    delete:
      operationId: deleteTodoItemModel
      tags: ["TodoItemModel"]
      description: Deletes the todoItem and returns a 204 if the operation succeeds.
      parameters:
        - name: todoItemId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          content:
            application/json: {}
            application/xml: {}